(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["vendors~2a42e354"],{

/***/ "GAND":
/*!********************************************************************!*\
  !*** ./node_modules/aurelia-webpack-plugin/runtime/empty-entry.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// This file contains an empty module that does nothing.\n// It's meant to be added as an entry point to the main bundle\n// and helps reliably adding some Aurelia dependencies that are attached \n// to no module in particular, such as `includeAll` results or `aureliaApp`.\n//\n// Trying to attach those dependencies to, for example, 'aurelia-bootstrapper' \n// is unreliable if 'aurelia-bootstrapper' is in a DLL outside the bundle.\n//\n// Trying to attach to 'aurelia-loader-webpack' works well, unless a user\n// configures a customized loader instead (unlikely, but in theory supported).\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiR0FORC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9hdXJlbGlhLXdlYnBhY2stcGx1Z2luL3J1bnRpbWUvZW1wdHktZW50cnkuanM/MTgwMyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBUaGlzIGZpbGUgY29udGFpbnMgYW4gZW1wdHkgbW9kdWxlIHRoYXQgZG9lcyBub3RoaW5nLlxuLy8gSXQncyBtZWFudCB0byBiZSBhZGRlZCBhcyBhbiBlbnRyeSBwb2ludCB0byB0aGUgbWFpbiBidW5kbGVcbi8vIGFuZCBoZWxwcyByZWxpYWJseSBhZGRpbmcgc29tZSBBdXJlbGlhIGRlcGVuZGVuY2llcyB0aGF0IGFyZSBhdHRhY2hlZCBcbi8vIHRvIG5vIG1vZHVsZSBpbiBwYXJ0aWN1bGFyLCBzdWNoIGFzIGBpbmNsdWRlQWxsYCByZXN1bHRzIG9yIGBhdXJlbGlhQXBwYC5cbi8vXG4vLyBUcnlpbmcgdG8gYXR0YWNoIHRob3NlIGRlcGVuZGVuY2llcyB0bywgZm9yIGV4YW1wbGUsICdhdXJlbGlhLWJvb3RzdHJhcHBlcicgXG4vLyBpcyB1bnJlbGlhYmxlIGlmICdhdXJlbGlhLWJvb3RzdHJhcHBlcicgaXMgaW4gYSBETEwgb3V0c2lkZSB0aGUgYnVuZGxlLlxuLy9cbi8vIFRyeWluZyB0byBhdHRhY2ggdG8gJ2F1cmVsaWEtbG9hZGVyLXdlYnBhY2snIHdvcmtzIHdlbGwsIHVubGVzcyBhIHVzZXJcbi8vIGNvbmZpZ3VyZXMgYSBjdXN0b21pemVkIGxvYWRlciBpbnN0ZWFkICh1bmxpa2VseSwgYnV0IGluIHRoZW9yeSBzdXBwb3J0ZWQpLlxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///GAND\n");

/***/ }),

/***/ "GmYv":
/*!*************************************************************************!*\
  !*** ./node_modules/aurelia-webpack-plugin/runtime/pal-loader-entry.js ***!
  \*************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var aurelia_pal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! aurelia-pal */ \"70NS\");\n// With default aurelia-loader-webpack config, this module is added as an extra entry\n// before any other code executes so that PAL.Loader is properly configured.\n// There are several tricky points worth noticing.\n// \n// We don't add aurelia-loader-webpack itself as an entry point (used to until 2.0 RC2)\n// because it (transitively) brings too much bagage with itself, most notably polyfills.\n// This made it super-hard to add other polyfills before Aurelia's and led to various bugs.\n//\n// We don't add custom code in aurelia-pal or aurelia-loader or aurelia-bootstrapper to detect\n// the Webpack environment and configure the loader because they might live in a DLL.\n// If they do, they would bring aurelia-loader-webpack along in the DLL and this is a special \n// library that *has to be in the main chunk.*\n//\n// The over-complicated design I've settled upon in the end is to use this special module\n// as an entry point that configures aurelia-loader-webpack. It has minimal static imports:\n// just aurelia-pal, which itself has no other dependencies and doesn't run much code.\n// It hacks the loader field into a getter so that it can synchronously load aurelia-loader-webpack\n// just in time when it is demanded by aurelia-bootstrapper.\n// This enables users to load polyfills before aurelia-loader-webpack is actually loaded.\n\n\n\nvar Loader;\n\nObject.defineProperty(aurelia_pal__WEBPACK_IMPORTED_MODULE_0__[\"PLATFORM\"], \"Loader\", {\n  get: function() {\n    return Loader || (Loader = __webpack_require__(/*! aurelia-loader-webpack */ \"5jyU\").WebpackLoader);\n  },\n  set: function(value) {\n    Loader = value;\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiR21Zdi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9hdXJlbGlhLXdlYnBhY2stcGx1Z2luL3J1bnRpbWUvcGFsLWxvYWRlci1lbnRyeS5qcz8xYTY2Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIFdpdGggZGVmYXVsdCBhdXJlbGlhLWxvYWRlci13ZWJwYWNrIGNvbmZpZywgdGhpcyBtb2R1bGUgaXMgYWRkZWQgYXMgYW4gZXh0cmEgZW50cnlcbi8vIGJlZm9yZSBhbnkgb3RoZXIgY29kZSBleGVjdXRlcyBzbyB0aGF0IFBBTC5Mb2FkZXIgaXMgcHJvcGVybHkgY29uZmlndXJlZC5cbi8vIFRoZXJlIGFyZSBzZXZlcmFsIHRyaWNreSBwb2ludHMgd29ydGggbm90aWNpbmcuXG4vLyBcbi8vIFdlIGRvbid0IGFkZCBhdXJlbGlhLWxvYWRlci13ZWJwYWNrIGl0c2VsZiBhcyBhbiBlbnRyeSBwb2ludCAodXNlZCB0byB1bnRpbCAyLjAgUkMyKVxuLy8gYmVjYXVzZSBpdCAodHJhbnNpdGl2ZWx5KSBicmluZ3MgdG9vIG11Y2ggYmFnYWdlIHdpdGggaXRzZWxmLCBtb3N0IG5vdGFibHkgcG9seWZpbGxzLlxuLy8gVGhpcyBtYWRlIGl0IHN1cGVyLWhhcmQgdG8gYWRkIG90aGVyIHBvbHlmaWxscyBiZWZvcmUgQXVyZWxpYSdzIGFuZCBsZWQgdG8gdmFyaW91cyBidWdzLlxuLy9cbi8vIFdlIGRvbid0IGFkZCBjdXN0b20gY29kZSBpbiBhdXJlbGlhLXBhbCBvciBhdXJlbGlhLWxvYWRlciBvciBhdXJlbGlhLWJvb3RzdHJhcHBlciB0byBkZXRlY3Rcbi8vIHRoZSBXZWJwYWNrIGVudmlyb25tZW50IGFuZCBjb25maWd1cmUgdGhlIGxvYWRlciBiZWNhdXNlIHRoZXkgbWlnaHQgbGl2ZSBpbiBhIERMTC5cbi8vIElmIHRoZXkgZG8sIHRoZXkgd291bGQgYnJpbmcgYXVyZWxpYS1sb2FkZXItd2VicGFjayBhbG9uZyBpbiB0aGUgRExMIGFuZCB0aGlzIGlzIGEgc3BlY2lhbCBcbi8vIGxpYnJhcnkgdGhhdCAqaGFzIHRvIGJlIGluIHRoZSBtYWluIGNodW5rLipcbi8vXG4vLyBUaGUgb3Zlci1jb21wbGljYXRlZCBkZXNpZ24gSSd2ZSBzZXR0bGVkIHVwb24gaW4gdGhlIGVuZCBpcyB0byB1c2UgdGhpcyBzcGVjaWFsIG1vZHVsZVxuLy8gYXMgYW4gZW50cnkgcG9pbnQgdGhhdCBjb25maWd1cmVzIGF1cmVsaWEtbG9hZGVyLXdlYnBhY2suIEl0IGhhcyBtaW5pbWFsIHN0YXRpYyBpbXBvcnRzOlxuLy8ganVzdCBhdXJlbGlhLXBhbCwgd2hpY2ggaXRzZWxmIGhhcyBubyBvdGhlciBkZXBlbmRlbmNpZXMgYW5kIGRvZXNuJ3QgcnVuIG11Y2ggY29kZS5cbi8vIEl0IGhhY2tzIHRoZSBsb2FkZXIgZmllbGQgaW50byBhIGdldHRlciBzbyB0aGF0IGl0IGNhbiBzeW5jaHJvbm91c2x5IGxvYWQgYXVyZWxpYS1sb2FkZXItd2VicGFja1xuLy8ganVzdCBpbiB0aW1lIHdoZW4gaXQgaXMgZGVtYW5kZWQgYnkgYXVyZWxpYS1ib290c3RyYXBwZXIuXG4vLyBUaGlzIGVuYWJsZXMgdXNlcnMgdG8gbG9hZCBwb2x5ZmlsbHMgYmVmb3JlIGF1cmVsaWEtbG9hZGVyLXdlYnBhY2sgaXMgYWN0dWFsbHkgbG9hZGVkLlxuXG5pbXBvcnQgeyBQTEFURk9STSB9IGZyb20gXCJhdXJlbGlhLXBhbFwiO1xuXG52YXIgTG9hZGVyO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoUExBVEZPUk0sIFwiTG9hZGVyXCIsIHtcbiAgZ2V0OiBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gTG9hZGVyIHx8IChMb2FkZXIgPSByZXF1aXJlKFwiYXVyZWxpYS1sb2FkZXItd2VicGFja1wiKS5XZWJwYWNrTG9hZGVyKTtcbiAgfSxcbiAgc2V0OiBmdW5jdGlvbih2YWx1ZSkge1xuICAgIExvYWRlciA9IHZhbHVlO1xuICB9XG59KTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///GmYv\n");

/***/ }),

/***/ "aurelia-ui-virtualization":
/*!*************************************************************************************************!*\
  !*** ./node_modules/aurelia-ui-virtualization/dist/native-modules/aurelia-ui-virtualization.js ***!
  \*************************************************************************************************/
/*! exports provided: configure, VirtualRepeat, InfiniteScrollNext, VirtualizationEvents */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(Promise) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"configure\", function() { return configure; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"VirtualRepeat\", function() { return VirtualRepeat; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"InfiniteScrollNext\", function() { return InfiniteScrollNext; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"VirtualizationEvents\", function() { return VirtualizationEvents; });\n/* harmony import */ var aurelia_binding__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! aurelia-binding */ \"X5gX\");\n/* harmony import */ var aurelia_templating__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! aurelia-templating */ \"hij8\");\n/* harmony import */ var aurelia_templating_resources__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! aurelia-templating-resources */ \"aurelia-templating-resources\");\n/* harmony import */ var aurelia_pal__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! aurelia-pal */ \"70NS\");\n/* harmony import */ var aurelia_dependency_injection__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! aurelia-dependency-injection */ \"3U8n\");\n\n\n\n\n\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\n\nvar rebindView = function (repeat, view, collectionIndex, collection) {\r\n    view.bindingContext[repeat.local] = collection[collectionIndex];\r\n    Object(aurelia_templating_resources__WEBPACK_IMPORTED_MODULE_2__[\"updateOverrideContext\"])(view.overrideContext, collectionIndex, collection.length);\r\n};\r\nvar rebindAndMoveView = function (repeat, view, index, moveToBottom) {\r\n    var items = repeat.items;\r\n    var viewSlot = repeat.viewSlot;\r\n    Object(aurelia_templating_resources__WEBPACK_IMPORTED_MODULE_2__[\"updateOverrideContext\"])(view.overrideContext, index, items.length);\r\n    view.bindingContext[repeat.local] = items[index];\r\n    if (moveToBottom) {\r\n        viewSlot.children.push(viewSlot.children.shift());\r\n        repeat.templateStrategy.moveViewLast(view, repeat.bottomBufferEl);\r\n    }\r\n    else {\r\n        viewSlot.children.unshift(viewSlot.children.splice(-1, 1)[0]);\r\n        repeat.templateStrategy.moveViewFirst(view, repeat.topBufferEl);\r\n    }\r\n};\r\nvar calcMinViewsRequired = function (scrollerHeight, itemHeight) {\r\n    return Math$floor(scrollerHeight / itemHeight) + 1;\r\n};\r\nvar Math$abs = Math.abs;\r\nvar Math$max = Math.max;\r\nvar Math$min = Math.min;\r\nvar Math$round = Math.round;\r\nvar Math$floor = Math.floor;\r\nvar $isNaN = isNaN;\n\nvar doc = document;\r\nvar htmlElement = doc.documentElement;\r\nvar $raf = requestAnimationFrame;\n\nvar getScrollerElement = function (element) {\r\n    var current = element.parentNode;\r\n    while (current !== null && current !== htmlElement) {\r\n        if (hasOverflowScroll(current)) {\r\n            return current;\r\n        }\r\n        current = current.parentNode;\r\n    }\r\n    return htmlElement;\r\n};\r\nvar getElementDistanceToTopOfDocument = function (element) {\r\n    var box = element.getBoundingClientRect();\r\n    var scrollTop = window.pageYOffset;\r\n    var clientTop = htmlElement.clientTop;\r\n    var top = box.top + scrollTop - clientTop;\r\n    return Math$round(top);\r\n};\r\nvar hasOverflowScroll = function (element) {\r\n    var style = window.getComputedStyle(element);\r\n    return style && (style.overflowY === 'scroll' || style.overflow === 'scroll' || style.overflowY === 'auto' || style.overflow === 'auto');\r\n};\r\nvar getStyleValues = function (element) {\r\n    var styles = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        styles[_i - 1] = arguments[_i];\r\n    }\r\n    var currentStyle = window.getComputedStyle(element);\r\n    var value = 0;\r\n    var styleValue = 0;\r\n    for (var i = 0, ii = styles.length; ii > i; ++i) {\r\n        styleValue = parseFloat(currentStyle[styles[i]]);\r\n        value += $isNaN(styleValue) ? 0 : styleValue;\r\n    }\r\n    return value;\r\n};\r\nvar calcOuterHeight = function (element) {\r\n    var height = element.getBoundingClientRect().height;\r\n    height += getStyleValues(element, 'marginTop', 'marginBottom');\r\n    return height;\r\n};\r\nvar calcScrollHeight = function (element) {\r\n    var height = element.getBoundingClientRect().height;\r\n    height -= getStyleValues(element, 'borderTopWidth', 'borderBottomWidth');\r\n    return height;\r\n};\r\nvar insertBeforeNode = function (view, bottomBuffer) {\r\n    bottomBuffer.parentNode.insertBefore(view.lastChild, bottomBuffer);\r\n};\r\nvar getDistanceToParent = function (child, parent) {\r\n    var offsetParent = child.offsetParent;\r\n    var childOffsetTop = child.offsetTop;\r\n    if (offsetParent === null || offsetParent === parent) {\r\n        return childOffsetTop;\r\n    }\r\n    else {\r\n        if (offsetParent.contains(parent)) {\r\n            return childOffsetTop - parent.offsetTop;\r\n        }\r\n        else {\r\n            return childOffsetTop + getDistanceToParent(offsetParent, parent);\r\n        }\r\n    }\r\n};\n\nvar ArrayVirtualRepeatStrategy = (function (_super) {\r\n    __extends(ArrayVirtualRepeatStrategy, _super);\r\n    function ArrayVirtualRepeatStrategy() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ArrayVirtualRepeatStrategy.prototype.createFirstRow = function (repeat) {\r\n        var overrideContext = Object(aurelia_templating_resources__WEBPACK_IMPORTED_MODULE_2__[\"createFullOverrideContext\"])(repeat, repeat.items[0], 0, 1);\r\n        return repeat.addView(overrideContext.bindingContext, overrideContext);\r\n    };\r\n    ArrayVirtualRepeatStrategy.prototype.initCalculation = function (repeat, items) {\r\n        var itemCount = items.length;\r\n        if (!(itemCount > 0)) {\r\n            return 1;\r\n        }\r\n        var scrollerInfo = repeat.getScrollerInfo();\r\n        var existingViewCount = repeat.viewCount();\r\n        if (itemCount > 0 && existingViewCount === 0) {\r\n            this.createFirstRow(repeat);\r\n        }\r\n        var firstView = repeat.firstView();\r\n        var itemHeight = calcOuterHeight(firstView.firstChild);\r\n        if (itemHeight === 0) {\r\n            return 0;\r\n        }\r\n        repeat.itemHeight = itemHeight;\r\n        var scroll_el_height = scrollerInfo.height;\r\n        var elementsInView = repeat.minViewsRequired = calcMinViewsRequired(scroll_el_height, itemHeight);\r\n        return 2 | 4;\r\n    };\r\n    ArrayVirtualRepeatStrategy.prototype.onAttached = function (repeat) {\r\n        if (repeat.items.length < repeat.minViewsRequired) {\r\n            repeat.getMore(0, true, this.isNearBottom(repeat, repeat.lastViewIndex()), true);\r\n        }\r\n    };\r\n    ArrayVirtualRepeatStrategy.prototype.getViewRange = function (repeat, scrollerInfo) {\r\n        var topBufferEl = repeat.topBufferEl;\r\n        var scrollerEl = repeat.scrollerEl;\r\n        var itemHeight = repeat.itemHeight;\r\n        var realScrollTop = 0;\r\n        var isFixedHeightContainer = scrollerInfo.scroller !== htmlElement;\r\n        if (isFixedHeightContainer) {\r\n            var topBufferDistance = getDistanceToParent(topBufferEl, scrollerEl);\r\n            var scrollerScrollTop = scrollerInfo.scrollTop;\r\n            realScrollTop = Math$max(0, scrollerScrollTop - Math$abs(topBufferDistance));\r\n        }\r\n        else {\r\n            realScrollTop = pageYOffset - repeat.distanceToTop;\r\n        }\r\n        var realViewCount = repeat.minViewsRequired * 2;\r\n        var firstVisibleIndex = Math$max(0, itemHeight > 0 ? Math$floor(realScrollTop / itemHeight) : 0);\r\n        var lastVisibleIndex = Math$min(repeat.items.length - 1, firstVisibleIndex + (realViewCount - 1));\r\n        firstVisibleIndex = Math$max(0, Math$min(firstVisibleIndex, lastVisibleIndex - (realViewCount - 1)));\r\n        return [firstVisibleIndex, lastVisibleIndex];\r\n    };\r\n    ArrayVirtualRepeatStrategy.prototype.updateBuffers = function (repeat, firstIndex) {\r\n        var itemHeight = repeat.itemHeight;\r\n        var itemCount = repeat.items.length;\r\n        repeat.topBufferHeight = firstIndex * itemHeight;\r\n        repeat.bottomBufferHeight = (itemCount - firstIndex - repeat.viewCount()) * itemHeight;\r\n        repeat.updateBufferElements(true);\r\n    };\r\n    ArrayVirtualRepeatStrategy.prototype.isNearTop = function (repeat, firstIndex) {\r\n        var itemCount = repeat.items.length;\r\n        return itemCount > 0\r\n            ? firstIndex < repeat.edgeDistance\r\n            : false;\r\n    };\r\n    ArrayVirtualRepeatStrategy.prototype.isNearBottom = function (repeat, lastIndex) {\r\n        var itemCount = repeat.items.length;\r\n        return lastIndex === -1\r\n            ? true\r\n            : itemCount > 0\r\n                ? lastIndex > (itemCount - repeat.edgeDistance)\r\n                : false;\r\n    };\r\n    ArrayVirtualRepeatStrategy.prototype.instanceChanged = function (repeat, items, first) {\r\n        if (this._inPlaceProcessItems(repeat, items, first)) {\r\n            this._remeasure(repeat, repeat.itemHeight, repeat.minViewsRequired * 2, items.length, repeat.$first);\r\n        }\r\n    };\r\n    ArrayVirtualRepeatStrategy.prototype.instanceMutated = function (repeat, array, splices) {\r\n        this._standardProcessInstanceMutated(repeat, array, splices);\r\n    };\r\n    ArrayVirtualRepeatStrategy.prototype._inPlaceProcessItems = function ($repeat, items, firstIndex) {\r\n        var repeat = $repeat;\r\n        var currItemCount = items.length;\r\n        if (currItemCount === 0) {\r\n            repeat.removeAllViews(true, false);\r\n            repeat.resetCalculation();\r\n            repeat.__queuedSplices = repeat.__array = undefined;\r\n            return false;\r\n        }\r\n        var max_views_count = repeat.minViewsRequired * 2;\r\n        var realViewsCount = repeat.viewCount();\r\n        while (realViewsCount > currItemCount) {\r\n            realViewsCount--;\r\n            repeat.removeView(realViewsCount, true, false);\r\n        }\r\n        while (realViewsCount > max_views_count) {\r\n            realViewsCount--;\r\n            repeat.removeView(realViewsCount, true, false);\r\n        }\r\n        realViewsCount = Math$min(realViewsCount, max_views_count);\r\n        var local = repeat.local;\r\n        var lastIndex = currItemCount - 1;\r\n        if (firstIndex + realViewsCount > lastIndex) {\r\n            firstIndex = Math$max(0, currItemCount - realViewsCount);\r\n        }\r\n        repeat.$first = firstIndex;\r\n        for (var i = 0; i < realViewsCount; i++) {\r\n            var currIndex = i + firstIndex;\r\n            var view = repeat.view(i);\r\n            var last = currIndex === currItemCount - 1;\r\n            var middle = currIndex !== 0 && !last;\r\n            var bindingContext = view.bindingContext;\r\n            var overrideContext = view.overrideContext;\r\n            if (bindingContext[local] === items[currIndex]\r\n                && overrideContext.$index === currIndex\r\n                && overrideContext.$middle === middle\r\n                && overrideContext.$last === last) {\r\n                continue;\r\n            }\r\n            bindingContext[local] = items[currIndex];\r\n            overrideContext.$first = currIndex === 0;\r\n            overrideContext.$middle = middle;\r\n            overrideContext.$last = last;\r\n            overrideContext.$index = currIndex;\r\n            var odd = currIndex % 2 === 1;\r\n            overrideContext.$odd = odd;\r\n            overrideContext.$even = !odd;\r\n            repeat.updateBindings(view);\r\n        }\r\n        var minLength = Math$min(max_views_count, currItemCount);\r\n        for (var i = realViewsCount; i < minLength; i++) {\r\n            var overrideContext = Object(aurelia_templating_resources__WEBPACK_IMPORTED_MODULE_2__[\"createFullOverrideContext\"])(repeat, items[i], i, currItemCount);\r\n            repeat.addView(overrideContext.bindingContext, overrideContext);\r\n        }\r\n        return true;\r\n    };\r\n    ArrayVirtualRepeatStrategy.prototype._standardProcessInstanceMutated = function ($repeat, array, splices) {\r\n        var _this = this;\r\n        var repeat = $repeat;\r\n        if (repeat.__queuedSplices) {\r\n            for (var i = 0, ii = splices.length; i < ii; ++i) {\r\n                var _a = splices[i], index = _a.index, removed = _a.removed, addedCount = _a.addedCount;\r\n                Object(aurelia_binding__WEBPACK_IMPORTED_MODULE_0__[\"mergeSplice\"])(repeat.__queuedSplices, index, removed, addedCount);\r\n            }\r\n            repeat.__array = array.slice(0);\r\n            return;\r\n        }\r\n        if (array.length === 0) {\r\n            repeat.removeAllViews(true, false);\r\n            repeat.resetCalculation();\r\n            repeat.__queuedSplices = repeat.__array = undefined;\r\n            return;\r\n        }\r\n        var maybePromise = this._runSplices(repeat, array.slice(0), splices);\r\n        if (maybePromise instanceof Promise) {\r\n            var queuedSplices_1 = repeat.__queuedSplices = [];\r\n            var runQueuedSplices_1 = function () {\r\n                if (!queuedSplices_1.length) {\r\n                    repeat.__queuedSplices = repeat.__array = undefined;\r\n                    return;\r\n                }\r\n                var nextPromise = _this._runSplices(repeat, repeat.__array, queuedSplices_1) || Promise.resolve();\r\n                nextPromise.then(runQueuedSplices_1);\r\n            };\r\n            maybePromise.then(runQueuedSplices_1);\r\n        }\r\n    };\r\n    ArrayVirtualRepeatStrategy.prototype._runSplices = function (repeat, newArray, splices) {\r\n        var firstIndex = repeat.$first;\r\n        var totalRemovedCount = 0;\r\n        var totalAddedCount = 0;\r\n        var splice;\r\n        var i = 0;\r\n        var spliceCount = splices.length;\r\n        var newArraySize = newArray.length;\r\n        var allSplicesAreInplace = true;\r\n        for (i = 0; spliceCount > i; i++) {\r\n            splice = splices[i];\r\n            var removedCount = splice.removed.length;\r\n            var addedCount = splice.addedCount;\r\n            totalRemovedCount += removedCount;\r\n            totalAddedCount += addedCount;\r\n            if (removedCount !== addedCount) {\r\n                allSplicesAreInplace = false;\r\n            }\r\n        }\r\n        if (allSplicesAreInplace) {\r\n            var lastIndex = repeat.lastViewIndex();\r\n            var repeatViewSlot = repeat.viewSlot;\r\n            for (i = 0; spliceCount > i; i++) {\r\n                splice = splices[i];\r\n                for (var collectionIndex = splice.index; collectionIndex < splice.index + splice.addedCount; collectionIndex++) {\r\n                    if (collectionIndex >= firstIndex && collectionIndex <= lastIndex) {\r\n                        var viewIndex = collectionIndex - firstIndex;\r\n                        var overrideContext = Object(aurelia_templating_resources__WEBPACK_IMPORTED_MODULE_2__[\"createFullOverrideContext\"])(repeat, newArray[collectionIndex], collectionIndex, newArraySize);\r\n                        repeat.removeView(viewIndex, true, true);\r\n                        repeat.insertView(viewIndex, overrideContext.bindingContext, overrideContext);\r\n                    }\r\n                }\r\n            }\r\n            return;\r\n        }\r\n        var firstIndexAfterMutation = firstIndex;\r\n        var itemHeight = repeat.itemHeight;\r\n        var originalSize = newArraySize + totalRemovedCount - totalAddedCount;\r\n        var currViewCount = repeat.viewCount();\r\n        var newViewCount = currViewCount;\r\n        if (originalSize === 0 && itemHeight === 0) {\r\n            repeat.resetCalculation();\r\n            repeat.itemsChanged();\r\n            return;\r\n        }\r\n        var all_splices_are_positive_and_before_view_port = totalRemovedCount === 0\r\n            && totalAddedCount > 0\r\n            && splices.every(function (splice) { return splice.index <= firstIndex; });\r\n        if (all_splices_are_positive_and_before_view_port) {\r\n            repeat.$first = firstIndex + totalAddedCount - 1;\r\n            repeat.topBufferHeight += totalAddedCount * itemHeight;\r\n            repeat.enableScroll();\r\n            var scrollerInfo = repeat.getScrollerInfo();\r\n            var scroller_scroll_top = scrollerInfo.scrollTop;\r\n            var top_buffer_distance = getDistanceToParent(repeat.topBufferEl, scrollerInfo.scroller);\r\n            var real_scroll_top = Math$max(0, scroller_scroll_top === 0\r\n                ? 0\r\n                : (scroller_scroll_top - top_buffer_distance));\r\n            var first_index_after_scroll_adjustment = real_scroll_top === 0\r\n                ? 0\r\n                : Math$floor(real_scroll_top / itemHeight);\r\n            if (scroller_scroll_top > top_buffer_distance\r\n                && first_index_after_scroll_adjustment === firstIndex) {\r\n                repeat.updateBufferElements(false);\r\n                repeat.scrollerEl.scrollTop = real_scroll_top + totalAddedCount * itemHeight;\r\n                this._remeasure(repeat, itemHeight, newViewCount, newArraySize, firstIndex);\r\n                return;\r\n            }\r\n        }\r\n        var lastViewIndex = repeat.lastViewIndex();\r\n        var all_splices_are_after_view_port = currViewCount > repeat.minViewsRequired\r\n            && splices.every(function (s) { return s.index > lastViewIndex; });\r\n        if (all_splices_are_after_view_port) {\r\n            repeat.bottomBufferHeight = Math$max(0, newArraySize - firstIndex - currViewCount) * itemHeight;\r\n            repeat.updateBufferElements(true);\r\n        }\r\n        else {\r\n            var viewsRequiredCount = repeat.minViewsRequired * 2;\r\n            if (viewsRequiredCount === 0) {\r\n                var scrollerInfo = repeat.getScrollerInfo();\r\n                var minViewsRequired = calcMinViewsRequired(scrollerInfo.height, itemHeight);\r\n                repeat.minViewsRequired = minViewsRequired;\r\n                viewsRequiredCount = minViewsRequired * 2;\r\n            }\r\n            for (i = 0; spliceCount > i; ++i) {\r\n                var _a = splices[i], addedCount = _a.addedCount, removedCount = _a.removed.length, spliceIndex = _a.index;\r\n                var removeDelta = removedCount - addedCount;\r\n                if (firstIndexAfterMutation > spliceIndex) {\r\n                    firstIndexAfterMutation = Math$max(0, firstIndexAfterMutation - removeDelta);\r\n                }\r\n            }\r\n            newViewCount = 0;\r\n            if (newArraySize <= repeat.minViewsRequired) {\r\n                firstIndexAfterMutation = 0;\r\n                newViewCount = newArraySize;\r\n            }\r\n            else {\r\n                if (newArraySize <= viewsRequiredCount) {\r\n                    newViewCount = newArraySize;\r\n                    firstIndexAfterMutation = 0;\r\n                }\r\n                else {\r\n                    newViewCount = viewsRequiredCount;\r\n                }\r\n            }\r\n            var newTopBufferItemCount = newArraySize >= firstIndexAfterMutation\r\n                ? firstIndexAfterMutation\r\n                : 0;\r\n            var viewCountDelta = newViewCount - currViewCount;\r\n            if (viewCountDelta > 0) {\r\n                for (i = 0; viewCountDelta > i; ++i) {\r\n                    var collectionIndex = firstIndexAfterMutation + currViewCount + i;\r\n                    var overrideContext = Object(aurelia_templating_resources__WEBPACK_IMPORTED_MODULE_2__[\"createFullOverrideContext\"])(repeat, newArray[collectionIndex], collectionIndex, newArray.length);\r\n                    repeat.addView(overrideContext.bindingContext, overrideContext);\r\n                }\r\n            }\r\n            else {\r\n                var ii = Math$abs(viewCountDelta);\r\n                for (i = 0; ii > i; ++i) {\r\n                    repeat.removeView(newViewCount, true, false);\r\n                }\r\n            }\r\n            var newBotBufferItemCount = Math$max(0, newArraySize - newTopBufferItemCount - newViewCount);\r\n            repeat.$first = firstIndexAfterMutation;\r\n            repeat.topBufferHeight = newTopBufferItemCount * itemHeight;\r\n            repeat.bottomBufferHeight = newBotBufferItemCount * itemHeight;\r\n            repeat.updateBufferElements(true);\r\n        }\r\n        this._remeasure(repeat, itemHeight, newViewCount, newArraySize, firstIndexAfterMutation);\r\n    };\r\n    ArrayVirtualRepeatStrategy.prototype.updateAllViews = function (repeat, startIndex) {\r\n        var views = repeat.viewSlot.children;\r\n        var viewLength = views.length;\r\n        var collection = repeat.items;\r\n        var delta = Math$floor(repeat.topBufferHeight / repeat.itemHeight);\r\n        var collectionIndex = 0;\r\n        var view;\r\n        for (; viewLength > startIndex; ++startIndex) {\r\n            collectionIndex = startIndex + delta;\r\n            view = repeat.view(startIndex);\r\n            rebindView(repeat, view, collectionIndex, collection);\r\n            repeat.updateBindings(view);\r\n        }\r\n    };\r\n    ArrayVirtualRepeatStrategy.prototype.remeasure = function (repeat) {\r\n        this._remeasure(repeat, repeat.itemHeight, repeat.viewCount(), repeat.items.length, repeat.firstViewIndex());\r\n    };\r\n    ArrayVirtualRepeatStrategy.prototype._remeasure = function (repeat, itemHeight, newViewCount, newArraySize, firstIndex) {\r\n        var scrollerInfo = repeat.getScrollerInfo();\r\n        var scroller_scroll_top = scrollerInfo.scrollTop;\r\n        var top_buffer_distance = getDistanceToParent(repeat.topBufferEl, scrollerInfo.scroller);\r\n        var real_scroll_top = Math$max(0, scroller_scroll_top === 0\r\n            ? 0\r\n            : (scroller_scroll_top - top_buffer_distance));\r\n        var first_index_after_scroll_adjustment = real_scroll_top === 0\r\n            ? 0\r\n            : Math$floor(real_scroll_top / itemHeight);\r\n        if (first_index_after_scroll_adjustment + newViewCount >= newArraySize) {\r\n            first_index_after_scroll_adjustment = Math$max(0, newArraySize - newViewCount);\r\n        }\r\n        var top_buffer_item_count_after_scroll_adjustment = first_index_after_scroll_adjustment;\r\n        var bot_buffer_item_count_after_scroll_adjustment = Math$max(0, newArraySize - top_buffer_item_count_after_scroll_adjustment - newViewCount);\r\n        repeat.$first = first_index_after_scroll_adjustment;\r\n        repeat.topBufferHeight = top_buffer_item_count_after_scroll_adjustment * itemHeight;\r\n        repeat.bottomBufferHeight = bot_buffer_item_count_after_scroll_adjustment * itemHeight;\r\n        repeat._handlingMutations = false;\r\n        repeat.revertScrollCheckGuard();\r\n        repeat.updateBufferElements();\r\n        this.updateAllViews(repeat, 0);\r\n    };\r\n    return ArrayVirtualRepeatStrategy;\r\n}(aurelia_templating_resources__WEBPACK_IMPORTED_MODULE_2__[\"ArrayRepeatStrategy\"]));\n\nvar NullVirtualRepeatStrategy = (function (_super) {\r\n    __extends(NullVirtualRepeatStrategy, _super);\r\n    function NullVirtualRepeatStrategy() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    NullVirtualRepeatStrategy.prototype.getViewRange = function (repeat, scrollerInfo) {\r\n        return [0, 0];\r\n    };\r\n    NullVirtualRepeatStrategy.prototype.updateBuffers = function (repeat, firstIndex) { };\r\n    NullVirtualRepeatStrategy.prototype.onAttached = function () { };\r\n    NullVirtualRepeatStrategy.prototype.isNearTop = function () {\r\n        return false;\r\n    };\r\n    NullVirtualRepeatStrategy.prototype.isNearBottom = function () {\r\n        return false;\r\n    };\r\n    NullVirtualRepeatStrategy.prototype.initCalculation = function (repeat, items) {\r\n        repeat.itemHeight\r\n            = repeat.minViewsRequired\r\n                = 0;\r\n        return 2;\r\n    };\r\n    NullVirtualRepeatStrategy.prototype.createFirstRow = function () {\r\n        return null;\r\n    };\r\n    NullVirtualRepeatStrategy.prototype.instanceMutated = function () { };\r\n    NullVirtualRepeatStrategy.prototype.instanceChanged = function (repeat) {\r\n        repeat.removeAllViews(true, false);\r\n        repeat.resetCalculation();\r\n    };\r\n    NullVirtualRepeatStrategy.prototype.remeasure = function (repeat) { };\r\n    NullVirtualRepeatStrategy.prototype.updateAllViews = function () { };\r\n    return NullVirtualRepeatStrategy;\r\n}(aurelia_templating_resources__WEBPACK_IMPORTED_MODULE_2__[\"NullRepeatStrategy\"]));\n\nvar VirtualRepeatStrategyLocator = (function () {\r\n    function VirtualRepeatStrategyLocator() {\r\n        this.matchers = [];\r\n        this.strategies = [];\r\n        this.addStrategy(function (items) { return items === null || items === undefined; }, new NullVirtualRepeatStrategy());\r\n        this.addStrategy(function (items) { return items instanceof Array; }, new ArrayVirtualRepeatStrategy());\r\n    }\r\n    VirtualRepeatStrategyLocator.prototype.addStrategy = function (matcher, strategy) {\r\n        this.matchers.push(matcher);\r\n        this.strategies.push(strategy);\r\n    };\r\n    VirtualRepeatStrategyLocator.prototype.getStrategy = function (items) {\r\n        var matchers = this.matchers;\r\n        for (var i = 0, ii = matchers.length; i < ii; ++i) {\r\n            if (matchers[i](items)) {\r\n                return this.strategies[i];\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    return VirtualRepeatStrategyLocator;\r\n}());\n\nvar DefaultTemplateStrategy = (function () {\r\n    function DefaultTemplateStrategy() {\r\n    }\r\n    DefaultTemplateStrategy.prototype.getScrollContainer = function (element) {\r\n        return getScrollerElement(element);\r\n    };\r\n    DefaultTemplateStrategy.prototype.moveViewFirst = function (view, topBuffer) {\r\n        insertBeforeNode(view, aurelia_pal__WEBPACK_IMPORTED_MODULE_3__[\"DOM\"].nextElementSibling(topBuffer));\r\n    };\r\n    DefaultTemplateStrategy.prototype.moveViewLast = function (view, bottomBuffer) {\r\n        var previousSibling = bottomBuffer.previousSibling;\r\n        var referenceNode = previousSibling.nodeType === 8 && previousSibling.data === 'anchor' ? previousSibling : bottomBuffer;\r\n        insertBeforeNode(view, referenceNode);\r\n    };\r\n    DefaultTemplateStrategy.prototype.createBuffers = function (element) {\r\n        var parent = element.parentNode;\r\n        return [\r\n            parent.insertBefore(aurelia_pal__WEBPACK_IMPORTED_MODULE_3__[\"DOM\"].createElement('div'), element),\r\n            parent.insertBefore(aurelia_pal__WEBPACK_IMPORTED_MODULE_3__[\"DOM\"].createElement('div'), element.nextSibling)\r\n        ];\r\n    };\r\n    DefaultTemplateStrategy.prototype.removeBuffers = function (el, topBuffer, bottomBuffer) {\r\n        var parent = el.parentNode;\r\n        parent.removeChild(topBuffer);\r\n        parent.removeChild(bottomBuffer);\r\n    };\r\n    DefaultTemplateStrategy.prototype.getFirstElement = function (topBuffer, bottomBuffer) {\r\n        var firstEl = topBuffer.nextElementSibling;\r\n        return firstEl === bottomBuffer ? null : firstEl;\r\n    };\r\n    DefaultTemplateStrategy.prototype.getLastElement = function (topBuffer, bottomBuffer) {\r\n        var lastEl = bottomBuffer.previousElementSibling;\r\n        return lastEl === topBuffer ? null : lastEl;\r\n    };\r\n    return DefaultTemplateStrategy;\r\n}());\n\nvar BaseTableTemplateStrategy = (function (_super) {\r\n    __extends(BaseTableTemplateStrategy, _super);\r\n    function BaseTableTemplateStrategy() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    BaseTableTemplateStrategy.prototype.getScrollContainer = function (element) {\r\n        return getScrollerElement(this.getTable(element));\r\n    };\r\n    BaseTableTemplateStrategy.prototype.createBuffers = function (element) {\r\n        var parent = element.parentNode;\r\n        return [\r\n            parent.insertBefore(aurelia_pal__WEBPACK_IMPORTED_MODULE_3__[\"DOM\"].createElement('tr'), element),\r\n            parent.insertBefore(aurelia_pal__WEBPACK_IMPORTED_MODULE_3__[\"DOM\"].createElement('tr'), element.nextSibling)\r\n        ];\r\n    };\r\n    return BaseTableTemplateStrategy;\r\n}(DefaultTemplateStrategy));\r\nvar TableBodyStrategy = (function (_super) {\r\n    __extends(TableBodyStrategy, _super);\r\n    function TableBodyStrategy() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    TableBodyStrategy.prototype.getTable = function (element) {\r\n        return element.parentNode;\r\n    };\r\n    return TableBodyStrategy;\r\n}(BaseTableTemplateStrategy));\r\nvar TableRowStrategy = (function (_super) {\r\n    __extends(TableRowStrategy, _super);\r\n    function TableRowStrategy() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    TableRowStrategy.prototype.getTable = function (element) {\r\n        return element.parentNode.parentNode;\r\n    };\r\n    return TableRowStrategy;\r\n}(BaseTableTemplateStrategy));\n\nvar ListTemplateStrategy = (function (_super) {\r\n    __extends(ListTemplateStrategy, _super);\r\n    function ListTemplateStrategy() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ListTemplateStrategy.prototype.createBuffers = function (element) {\r\n        var parent = element.parentNode;\r\n        return [\r\n            parent.insertBefore(aurelia_pal__WEBPACK_IMPORTED_MODULE_3__[\"DOM\"].createElement('li'), element),\r\n            parent.insertBefore(aurelia_pal__WEBPACK_IMPORTED_MODULE_3__[\"DOM\"].createElement('li'), element.nextSibling)\r\n        ];\r\n    };\r\n    return ListTemplateStrategy;\r\n}(DefaultTemplateStrategy));\n\nvar TemplateStrategyLocator = (function () {\r\n    function TemplateStrategyLocator(container) {\r\n        this.container = container;\r\n    }\r\n    TemplateStrategyLocator.prototype.getStrategy = function (element) {\r\n        var parent = element.parentNode;\r\n        var container = this.container;\r\n        if (parent === null) {\r\n            return container.get(DefaultTemplateStrategy);\r\n        }\r\n        var parentTagName = parent.tagName;\r\n        if (parentTagName === 'TBODY' || parentTagName === 'THEAD' || parentTagName === 'TFOOT') {\r\n            return container.get(TableRowStrategy);\r\n        }\r\n        if (parentTagName === 'TABLE') {\r\n            return container.get(TableBodyStrategy);\r\n        }\r\n        if (parentTagName === 'OL' || parentTagName === 'UL') {\r\n            return container.get(ListTemplateStrategy);\r\n        }\r\n        return container.get(DefaultTemplateStrategy);\r\n    };\r\n    TemplateStrategyLocator.inject = [aurelia_dependency_injection__WEBPACK_IMPORTED_MODULE_4__[\"Container\"]];\r\n    return TemplateStrategyLocator;\r\n}());\n\nvar VirtualizationEvents = Object.assign(Object.create(null), {\r\n    scrollerSizeChange: 'virtual-repeat-scroller-size-changed',\r\n    itemSizeChange: 'virtual-repeat-item-size-changed'\r\n});\n\nvar getResizeObserverClass = function () { return aurelia_pal__WEBPACK_IMPORTED_MODULE_3__[\"PLATFORM\"].global.ResizeObserver; };\n\nvar VirtualRepeat = (function (_super) {\r\n    __extends(VirtualRepeat, _super);\r\n    function VirtualRepeat(element, viewFactory, instruction, viewSlot, viewResources, observerLocator, collectionStrategyLocator, templateStrategyLocator) {\r\n        var _this = _super.call(this, {\r\n            local: 'item',\r\n            viewsRequireLifecycle: Object(aurelia_templating_resources__WEBPACK_IMPORTED_MODULE_2__[\"viewsRequireLifecycle\"])(viewFactory)\r\n        }) || this;\r\n        _this.$first = 0;\r\n        _this._isAttached = false;\r\n        _this._ticking = false;\r\n        _this._calledGetMore = false;\r\n        _this._skipNextScrollHandle = false;\r\n        _this._handlingMutations = false;\r\n        _this._lastGetMore = 0;\r\n        _this.element = element;\r\n        _this.viewFactory = viewFactory;\r\n        _this.instruction = instruction;\r\n        _this.viewSlot = viewSlot;\r\n        _this.lookupFunctions = viewResources['lookupFunctions'];\r\n        _this.observerLocator = observerLocator;\r\n        _this.taskQueue = observerLocator.taskQueue;\r\n        _this.strategyLocator = collectionStrategyLocator;\r\n        _this.templateStrategyLocator = templateStrategyLocator;\r\n        _this.edgeDistance = 5;\r\n        _this.sourceExpression = Object(aurelia_templating_resources__WEBPACK_IMPORTED_MODULE_2__[\"getItemsSourceExpression\"])(_this.instruction, 'virtual-repeat.for');\r\n        _this.isOneTime = Object(aurelia_templating_resources__WEBPACK_IMPORTED_MODULE_2__[\"isOneTime\"])(_this.sourceExpression);\r\n        _this.topBufferHeight\r\n            = _this.bottomBufferHeight\r\n                = _this.itemHeight\r\n                    = _this.distanceToTop\r\n                        = 0;\r\n        _this.revertScrollCheckGuard = function () {\r\n            _this._ticking = false;\r\n        };\r\n        _this._onScroll = _this._onScroll.bind(_this);\r\n        return _this;\r\n    }\r\n    VirtualRepeat.inject = function () {\r\n        return [\r\n            aurelia_pal__WEBPACK_IMPORTED_MODULE_3__[\"DOM\"].Element,\r\n            aurelia_templating__WEBPACK_IMPORTED_MODULE_1__[\"BoundViewFactory\"],\r\n            aurelia_templating__WEBPACK_IMPORTED_MODULE_1__[\"TargetInstruction\"],\r\n            aurelia_templating__WEBPACK_IMPORTED_MODULE_1__[\"ViewSlot\"],\r\n            aurelia_templating__WEBPACK_IMPORTED_MODULE_1__[\"ViewResources\"],\r\n            aurelia_binding__WEBPACK_IMPORTED_MODULE_0__[\"ObserverLocator\"],\r\n            VirtualRepeatStrategyLocator,\r\n            TemplateStrategyLocator\r\n        ];\r\n    };\r\n    VirtualRepeat.$resource = function () {\r\n        return {\r\n            type: 'attribute',\r\n            name: 'virtual-repeat',\r\n            templateController: true,\r\n            bindables: ['items', 'local']\r\n        };\r\n    };\r\n    VirtualRepeat.prototype.bind = function (bindingContext, overrideContext) {\r\n        this.scope = { bindingContext: bindingContext, overrideContext: overrideContext };\r\n    };\r\n    VirtualRepeat.prototype.attached = function () {\r\n        var _this = this;\r\n        this._isAttached = true;\r\n        var element = this.element;\r\n        var templateStrategy = this.templateStrategy = this.templateStrategyLocator.getStrategy(element);\r\n        var scrollerEl = this.scrollerEl = templateStrategy.getScrollContainer(element);\r\n        var _a = templateStrategy.createBuffers(element), topBufferEl = _a[0], bottomBufferEl = _a[1];\r\n        var isFixedHeightContainer = scrollerEl !== htmlElement;\r\n        var scrollListener = this._onScroll;\r\n        this.topBufferEl = topBufferEl;\r\n        this.bottomBufferEl = bottomBufferEl;\r\n        this.itemsChanged();\r\n        this._currScrollerInfo = this.getScrollerInfo();\r\n        if (isFixedHeightContainer) {\r\n            scrollerEl.addEventListener('scroll', scrollListener);\r\n        }\r\n        else {\r\n            var firstElement = templateStrategy.getFirstElement(topBufferEl, bottomBufferEl);\r\n            this.distanceToTop = firstElement === null ? 0 : getElementDistanceToTopOfDocument(topBufferEl);\r\n            aurelia_pal__WEBPACK_IMPORTED_MODULE_3__[\"DOM\"].addEventListener('scroll', scrollListener, false);\r\n            this._calcDistanceToTopInterval = aurelia_pal__WEBPACK_IMPORTED_MODULE_3__[\"PLATFORM\"].global.setInterval(function () {\r\n                var prevDistanceToTop = _this.distanceToTop;\r\n                var currDistanceToTop = getElementDistanceToTopOfDocument(topBufferEl);\r\n                _this.distanceToTop = currDistanceToTop;\r\n                if (prevDistanceToTop !== currDistanceToTop) {\r\n                    var currentScrollerInfo = _this.getScrollerInfo();\r\n                    var prevScrollerInfo = _this._currScrollerInfo;\r\n                    _this._currScrollerInfo = currentScrollerInfo;\r\n                    _this._handleScroll(currentScrollerInfo, prevScrollerInfo);\r\n                }\r\n            }, 500);\r\n        }\r\n        this.strategy.onAttached(this);\r\n    };\r\n    VirtualRepeat.prototype.call = function (context, changes) {\r\n        this[context](this.items, changes);\r\n    };\r\n    VirtualRepeat.prototype.detached = function () {\r\n        var scrollCt = this.scrollerEl;\r\n        var scrollListener = this._onScroll;\r\n        if (hasOverflowScroll(scrollCt)) {\r\n            scrollCt.removeEventListener('scroll', scrollListener);\r\n        }\r\n        else {\r\n            aurelia_pal__WEBPACK_IMPORTED_MODULE_3__[\"DOM\"].removeEventListener('scroll', scrollListener, false);\r\n        }\r\n        this.unobserveScroller();\r\n        this._currScrollerContentRect = undefined;\r\n        this._isAttached\r\n            = false;\r\n        this._unsubscribeCollection();\r\n        this.resetCalculation();\r\n        this.templateStrategy.removeBuffers(this.element, this.topBufferEl, this.bottomBufferEl);\r\n        this.topBufferEl = this.bottomBufferEl = this.scrollerEl = null;\r\n        this.removeAllViews(true, false);\r\n        var $clearInterval = aurelia_pal__WEBPACK_IMPORTED_MODULE_3__[\"PLATFORM\"].global.clearInterval;\r\n        $clearInterval(this._calcDistanceToTopInterval);\r\n        $clearInterval(this._sizeInterval);\r\n        this.distanceToTop\r\n            = this._sizeInterval\r\n                = this._calcDistanceToTopInterval = 0;\r\n    };\r\n    VirtualRepeat.prototype.unbind = function () {\r\n        this.scope = null;\r\n        this.items = null;\r\n    };\r\n    VirtualRepeat.prototype.itemsChanged = function () {\r\n        var _this = this;\r\n        this._unsubscribeCollection();\r\n        if (!this.scope || !this._isAttached) {\r\n            return;\r\n        }\r\n        var items = this.items;\r\n        var strategy = this.strategy = this.strategyLocator.getStrategy(items);\r\n        if (strategy === null) {\r\n            throw new Error('Value is not iterateable for virtual repeat.');\r\n        }\r\n        if (!this.isOneTime && !this._observeInnerCollection()) {\r\n            this._observeCollection();\r\n        }\r\n        var calculationSignals = strategy.initCalculation(this, items);\r\n        strategy.instanceChanged(this, items, this.$first);\r\n        if (calculationSignals & 1) {\r\n            this.resetCalculation();\r\n        }\r\n        if ((calculationSignals & 2) === 0) {\r\n            var _a = aurelia_pal__WEBPACK_IMPORTED_MODULE_3__[\"PLATFORM\"].global, $setInterval = _a.setInterval, $clearInterval_1 = _a.clearInterval;\r\n            $clearInterval_1(this._sizeInterval);\r\n            this._sizeInterval = $setInterval(function () {\r\n                if (_this.items) {\r\n                    var firstView = _this.firstView() || _this.strategy.createFirstRow(_this);\r\n                    var newCalcSize = calcOuterHeight(firstView.firstChild);\r\n                    if (newCalcSize > 0) {\r\n                        $clearInterval_1(_this._sizeInterval);\r\n                        _this.itemsChanged();\r\n                    }\r\n                }\r\n                else {\r\n                    $clearInterval_1(_this._sizeInterval);\r\n                }\r\n            }, 500);\r\n        }\r\n        if (calculationSignals & 4) {\r\n            this.observeScroller(this.scrollerEl);\r\n        }\r\n    };\r\n    VirtualRepeat.prototype.handleCollectionMutated = function (collection, changes) {\r\n        if (this._ignoreMutation) {\r\n            return;\r\n        }\r\n        this._handlingMutations = true;\r\n        this.strategy.instanceMutated(this, collection, changes);\r\n    };\r\n    VirtualRepeat.prototype.handleInnerCollectionMutated = function (collection, changes) {\r\n        var _this = this;\r\n        if (this._ignoreMutation) {\r\n            return;\r\n        }\r\n        this._ignoreMutation = true;\r\n        var newItems = this.sourceExpression.evaluate(this.scope, this.lookupFunctions);\r\n        this.taskQueue.queueMicroTask(function () { return _this._ignoreMutation = false; });\r\n        if (newItems === this.items) {\r\n            this.itemsChanged();\r\n        }\r\n        else {\r\n            this.items = newItems;\r\n        }\r\n    };\r\n    VirtualRepeat.prototype.enableScroll = function () {\r\n        this._ticking = false;\r\n        this._handlingMutations = false;\r\n        this._skipNextScrollHandle = false;\r\n    };\r\n    VirtualRepeat.prototype.getScroller = function () {\r\n        return this.scrollerEl;\r\n    };\r\n    VirtualRepeat.prototype.getScrollerInfo = function () {\r\n        var scroller = this.scrollerEl;\r\n        return {\r\n            scroller: scroller,\r\n            scrollTop: scroller.scrollTop,\r\n            height: scroller === htmlElement\r\n                ? innerHeight\r\n                : calcScrollHeight(scroller)\r\n        };\r\n    };\r\n    VirtualRepeat.prototype.resetCalculation = function () {\r\n        this.$first\r\n            = this.topBufferHeight\r\n                = this.bottomBufferHeight\r\n                    = this.itemHeight\r\n                        = this.minViewsRequired = 0;\r\n        this._ignoreMutation\r\n            = this._handlingMutations\r\n                = this._ticking = false;\r\n        this.updateBufferElements(true);\r\n    };\r\n    VirtualRepeat.prototype._onScroll = function () {\r\n        var _this = this;\r\n        var isHandlingMutations = this._handlingMutations;\r\n        if (!this._ticking && !isHandlingMutations) {\r\n            var prevScrollerInfo_1 = this._currScrollerInfo;\r\n            var currentScrollerInfo_1 = this.getScrollerInfo();\r\n            this._currScrollerInfo = currentScrollerInfo_1;\r\n            this.taskQueue.queueMicroTask(function () {\r\n                _this._ticking = false;\r\n                _this._handleScroll(currentScrollerInfo_1, prevScrollerInfo_1);\r\n            });\r\n            this._ticking = true;\r\n        }\r\n        if (isHandlingMutations) {\r\n            this._handlingMutations = false;\r\n        }\r\n    };\r\n    VirtualRepeat.prototype._handleScroll = function (currentScrollerInfo, prevScrollerInfo) {\r\n        if (!this._isAttached) {\r\n            return;\r\n        }\r\n        if (this._skipNextScrollHandle) {\r\n            this._skipNextScrollHandle = false;\r\n            return;\r\n        }\r\n        var items = this.items;\r\n        if (!items) {\r\n            return;\r\n        }\r\n        var strategy = this.strategy;\r\n        var old_range_start_index = this.$first;\r\n        var old_range_end_index = this.lastViewIndex();\r\n        var _a = strategy.getViewRange(this, currentScrollerInfo), new_range_start_index = _a[0], new_range_end_index = _a[1];\r\n        var scrolling_state = new_range_start_index > old_range_start_index\r\n            ? 1\r\n            : new_range_start_index < old_range_start_index\r\n                ? 2\r\n                : 0;\r\n        var didMovedViews = 0;\r\n        if (new_range_start_index >= old_range_start_index && old_range_end_index === new_range_end_index\r\n            || new_range_end_index === old_range_end_index && old_range_end_index >= new_range_end_index) {\r\n            if (new_range_start_index >= old_range_start_index && old_range_end_index === new_range_end_index) {\r\n                if (strategy.isNearBottom(this, new_range_end_index)) {\r\n                    scrolling_state |= 8;\r\n                }\r\n            }\r\n            else if (strategy.isNearTop(this, new_range_start_index)) {\r\n                scrolling_state |= 4;\r\n            }\r\n        }\r\n        else {\r\n            if (new_range_start_index > old_range_start_index && old_range_end_index >= new_range_start_index && new_range_end_index >= old_range_end_index) {\r\n                var views_to_move_count = new_range_start_index - old_range_start_index;\r\n                this._moveViews(views_to_move_count, 1);\r\n                didMovedViews = 1;\r\n                if (strategy.isNearBottom(this, new_range_end_index)) {\r\n                    scrolling_state |= 8;\r\n                }\r\n            }\r\n            else if (old_range_start_index > new_range_start_index && old_range_start_index <= new_range_end_index && old_range_end_index >= new_range_end_index) {\r\n                var views_to_move_count = old_range_end_index - new_range_end_index;\r\n                this._moveViews(views_to_move_count, -1);\r\n                didMovedViews = 1;\r\n                if (strategy.isNearTop(this, new_range_start_index)) {\r\n                    scrolling_state |= 4;\r\n                }\r\n            }\r\n            else if (old_range_end_index < new_range_start_index || old_range_start_index > new_range_end_index) {\r\n                strategy.remeasure(this);\r\n                if (old_range_end_index < new_range_start_index) {\r\n                    if (strategy.isNearBottom(this, new_range_end_index)) {\r\n                        scrolling_state |= 8;\r\n                    }\r\n                }\r\n                else if (strategy.isNearTop(this, new_range_start_index)) {\r\n                    scrolling_state |= 4;\r\n                }\r\n            }\r\n            else {\r\n                console.warn('Scroll intersection not handled');\r\n                strategy.remeasure(this);\r\n            }\r\n        }\r\n        if (didMovedViews === 1) {\r\n            this.$first = new_range_start_index;\r\n            strategy.updateBuffers(this, new_range_start_index);\r\n        }\r\n        if ((scrolling_state & (1 | 8)) === (1 | 8)\r\n            || (scrolling_state & (2 | 4)) === (2 | 4)) {\r\n            this.getMore(new_range_start_index, (scrolling_state & 4) > 0, (scrolling_state & 8) > 0);\r\n        }\r\n    };\r\n    VirtualRepeat.prototype._moveViews = function (viewsCount, direction) {\r\n        var repeat = this;\r\n        if (direction === -1) {\r\n            var startIndex = repeat.firstViewIndex();\r\n            while (viewsCount--) {\r\n                var view = repeat.lastView();\r\n                rebindAndMoveView(repeat, view, --startIndex, false);\r\n            }\r\n        }\r\n        else {\r\n            var lastIndex = repeat.lastViewIndex();\r\n            while (viewsCount--) {\r\n                var view = repeat.view(0);\r\n                rebindAndMoveView(repeat, view, ++lastIndex, true);\r\n            }\r\n        }\r\n    };\r\n    VirtualRepeat.prototype.getMore = function (topIndex, isNearTop, isNearBottom, force) {\r\n        var _this = this;\r\n        if (isNearTop || isNearBottom || force) {\r\n            if (!this._calledGetMore) {\r\n                var executeGetMore = function (time) {\r\n                    if (time - _this._lastGetMore < 16) {\r\n                        return;\r\n                    }\r\n                    _this._lastGetMore = time;\r\n                    _this._calledGetMore = true;\r\n                    var revertCalledGetMore = function () {\r\n                        _this._calledGetMore = false;\r\n                    };\r\n                    var firstView = _this.firstView();\r\n                    if (firstView === null) {\r\n                        revertCalledGetMore();\r\n                        return;\r\n                    }\r\n                    var firstViewElement = firstView.firstChild;\r\n                    var scrollNextAttrName = 'infinite-scroll-next';\r\n                    var func = firstViewElement\r\n                        && firstViewElement.au\r\n                        && firstViewElement.au[scrollNextAttrName]\r\n                        ? firstViewElement.au[scrollNextAttrName].instruction.attributes[scrollNextAttrName]\r\n                        : undefined;\r\n                    if (func === undefined) {\r\n                        revertCalledGetMore();\r\n                    }\r\n                    else {\r\n                        var scrollContext = {\r\n                            topIndex: topIndex,\r\n                            isAtBottom: isNearBottom,\r\n                            isAtTop: isNearTop\r\n                        };\r\n                        var overrideContext = _this.scope.overrideContext;\r\n                        overrideContext.$scrollContext = scrollContext;\r\n                        if (typeof func === 'string') {\r\n                            var bindingContext = overrideContext.bindingContext;\r\n                            var getMoreFuncName = firstView.firstChild.getAttribute(scrollNextAttrName);\r\n                            var funcCall = bindingContext[getMoreFuncName];\r\n                            if (typeof funcCall === 'function') {\r\n                                revertCalledGetMore();\r\n                                var result = funcCall.call(bindingContext, topIndex, isNearBottom, isNearTop);\r\n                                if (result instanceof Promise) {\r\n                                    _this._calledGetMore = true;\r\n                                    return result.then(function () {\r\n                                        revertCalledGetMore();\r\n                                    });\r\n                                }\r\n                            }\r\n                            else {\r\n                                throw new Error(\"'\" + scrollNextAttrName + \"' must be a function or evaluate to one\");\r\n                            }\r\n                        }\r\n                        else if (func.sourceExpression) {\r\n                            revertCalledGetMore();\r\n                            return func.sourceExpression.evaluate(_this.scope);\r\n                        }\r\n                        else {\r\n                            throw new Error(\"'\" + scrollNextAttrName + \"' must be a function or evaluate to one\");\r\n                        }\r\n                    }\r\n                };\r\n                $raf(executeGetMore);\r\n            }\r\n        }\r\n    };\r\n    VirtualRepeat.prototype.updateBufferElements = function (skipUpdate) {\r\n        this.topBufferEl.style.height = this.topBufferHeight + \"px\";\r\n        this.bottomBufferEl.style.height = this.bottomBufferHeight + \"px\";\r\n        if (skipUpdate) {\r\n            this._ticking = true;\r\n            $raf(this.revertScrollCheckGuard);\r\n        }\r\n    };\r\n    VirtualRepeat.prototype._unsubscribeCollection = function () {\r\n        var collectionObserver = this.collectionObserver;\r\n        if (collectionObserver) {\r\n            collectionObserver.unsubscribe(this.callContext, this);\r\n            this.collectionObserver = this.callContext = null;\r\n        }\r\n    };\r\n    VirtualRepeat.prototype.firstView = function () {\r\n        return this.view(0);\r\n    };\r\n    VirtualRepeat.prototype.lastView = function () {\r\n        return this.view(this.viewCount() - 1);\r\n    };\r\n    VirtualRepeat.prototype.firstViewIndex = function () {\r\n        var firstView = this.firstView();\r\n        return firstView === null ? -1 : firstView.overrideContext.$index;\r\n    };\r\n    VirtualRepeat.prototype.lastViewIndex = function () {\r\n        var lastView = this.lastView();\r\n        return lastView === null ? -1 : lastView.overrideContext.$index;\r\n    };\r\n    VirtualRepeat.prototype.observeScroller = function (scrollerEl) {\r\n        var _this = this;\r\n        var sizeChangeHandler = function (newRect) {\r\n            $raf(function () {\r\n                if (newRect === _this._currScrollerContentRect) {\r\n                    _this.itemsChanged();\r\n                }\r\n            });\r\n        };\r\n        var ResizeObserverConstructor = getResizeObserverClass();\r\n        if (typeof ResizeObserverConstructor === 'function') {\r\n            var observer = this._scrollerResizeObserver;\r\n            if (observer) {\r\n                observer.disconnect();\r\n            }\r\n            observer = this._scrollerResizeObserver = new ResizeObserverConstructor(function (entries) {\r\n                var oldRect = _this._currScrollerContentRect;\r\n                var newRect = entries[0].contentRect;\r\n                _this._currScrollerContentRect = newRect;\r\n                if (oldRect === undefined || newRect.height !== oldRect.height || newRect.width !== oldRect.width) {\r\n                    sizeChangeHandler(newRect);\r\n                }\r\n            });\r\n            observer.observe(scrollerEl);\r\n        }\r\n        var elEvents = this._scrollerEvents;\r\n        if (elEvents) {\r\n            elEvents.disposeAll();\r\n        }\r\n        var sizeChangeEventsHandler = function () {\r\n            $raf(function () {\r\n                _this.itemsChanged();\r\n            });\r\n        };\r\n        elEvents = this._scrollerEvents = new aurelia_templating__WEBPACK_IMPORTED_MODULE_1__[\"ElementEvents\"](scrollerEl);\r\n        elEvents.subscribe(VirtualizationEvents.scrollerSizeChange, sizeChangeEventsHandler, false);\r\n        elEvents.subscribe(VirtualizationEvents.itemSizeChange, sizeChangeEventsHandler, false);\r\n    };\r\n    VirtualRepeat.prototype.unobserveScroller = function () {\r\n        var observer = this._scrollerResizeObserver;\r\n        if (observer) {\r\n            observer.disconnect();\r\n        }\r\n        var scrollerEvents = this._scrollerEvents;\r\n        if (scrollerEvents) {\r\n            scrollerEvents.disposeAll();\r\n        }\r\n        this._scrollerResizeObserver\r\n            = this._scrollerEvents = undefined;\r\n    };\r\n    VirtualRepeat.prototype._observeInnerCollection = function () {\r\n        var items = this._getInnerCollection();\r\n        var strategy = this.strategyLocator.getStrategy(items);\r\n        if (!strategy) {\r\n            return false;\r\n        }\r\n        var collectionObserver = strategy.getCollectionObserver(this.observerLocator, items);\r\n        if (!collectionObserver) {\r\n            return false;\r\n        }\r\n        var context = \"handleInnerCollectionMutated\";\r\n        this.collectionObserver = collectionObserver;\r\n        this.callContext = context;\r\n        collectionObserver.subscribe(context, this);\r\n        return true;\r\n    };\r\n    VirtualRepeat.prototype._getInnerCollection = function () {\r\n        var expression = Object(aurelia_templating_resources__WEBPACK_IMPORTED_MODULE_2__[\"unwrapExpression\"])(this.sourceExpression);\r\n        if (!expression) {\r\n            return null;\r\n        }\r\n        return expression.evaluate(this.scope, null);\r\n    };\r\n    VirtualRepeat.prototype._observeCollection = function () {\r\n        var collectionObserver = this.strategy.getCollectionObserver(this.observerLocator, this.items);\r\n        if (collectionObserver) {\r\n            this.callContext = \"handleCollectionMutated\";\r\n            this.collectionObserver = collectionObserver;\r\n            collectionObserver.subscribe(this.callContext, this);\r\n        }\r\n    };\r\n    VirtualRepeat.prototype.viewCount = function () {\r\n        return this.viewSlot.children.length;\r\n    };\r\n    VirtualRepeat.prototype.views = function () {\r\n        return this.viewSlot.children;\r\n    };\r\n    VirtualRepeat.prototype.view = function (index) {\r\n        var viewSlot = this.viewSlot;\r\n        return index < 0 || index > viewSlot.children.length - 1 ? null : viewSlot.children[index];\r\n    };\r\n    VirtualRepeat.prototype.addView = function (bindingContext, overrideContext) {\r\n        var view = this.viewFactory.create();\r\n        view.bind(bindingContext, overrideContext);\r\n        this.viewSlot.add(view);\r\n        return view;\r\n    };\r\n    VirtualRepeat.prototype.insertView = function (index, bindingContext, overrideContext) {\r\n        var view = this.viewFactory.create();\r\n        view.bind(bindingContext, overrideContext);\r\n        this.viewSlot.insert(index, view);\r\n    };\r\n    VirtualRepeat.prototype.removeAllViews = function (returnToCache, skipAnimation) {\r\n        return this.viewSlot.removeAll(returnToCache, skipAnimation);\r\n    };\r\n    VirtualRepeat.prototype.removeView = function (index, returnToCache, skipAnimation) {\r\n        return this.viewSlot.removeAt(index, returnToCache, skipAnimation);\r\n    };\r\n    VirtualRepeat.prototype.updateBindings = function (view) {\r\n        var bindings = view.bindings;\r\n        var j = bindings.length;\r\n        while (j--) {\r\n            Object(aurelia_templating_resources__WEBPACK_IMPORTED_MODULE_2__[\"updateOneTimeBinding\"])(bindings[j]);\r\n        }\r\n        var controllers = view.controllers;\r\n        j = controllers.length;\r\n        while (j--) {\r\n            var boundProperties = controllers[j].boundProperties;\r\n            var k = boundProperties.length;\r\n            while (k--) {\r\n                var binding = boundProperties[k].binding;\r\n                Object(aurelia_templating_resources__WEBPACK_IMPORTED_MODULE_2__[\"updateOneTimeBinding\"])(binding);\r\n            }\r\n        }\r\n    };\r\n    return VirtualRepeat;\r\n}(aurelia_templating_resources__WEBPACK_IMPORTED_MODULE_2__[\"AbstractRepeater\"]));\n\nvar InfiniteScrollNext = (function () {\r\n    function InfiniteScrollNext() {\r\n    }\r\n    InfiniteScrollNext.$resource = function () {\r\n        return {\r\n            type: 'attribute',\r\n            name: 'infinite-scroll-next'\r\n        };\r\n    };\r\n    return InfiniteScrollNext;\r\n}());\n\nfunction configure(config) {\r\n    config.globalResources(VirtualRepeat, InfiniteScrollNext);\r\n}\n\n\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! promise-polyfill */ \"B/eG\")[\"default\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///aurelia-ui-virtualization\n");

/***/ }),

/***/ "xbL7":
/*!**************************************************************!*\
  !*** ./node_modules/linked-list-typescript/lib/src/index.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass LinkedList {\n    constructor(...values) {\n        this._head = this._tail = null;\n        this._length = 0;\n        if (values.length > 0) {\n            values.forEach((value) => {\n                this.append(value);\n            });\n        }\n    }\n    *iterator() {\n        let currentItem = this._head;\n        while (currentItem) {\n            yield currentItem.value;\n            currentItem = currentItem.next;\n        }\n    }\n    [Symbol.iterator]() {\n        return this.iterator();\n    }\n    get head() {\n        return this._head ? this._head.value : null;\n    }\n    get tail() {\n        return this._tail ? this._tail.value : null;\n    }\n    get length() {\n        return this._length;\n    }\n    // Adds the element at a specific position inside the linked list\n    insert(val, previousItem, checkDuplicates = false) {\n        if (checkDuplicates && this.isDuplicate(val)) {\n            return false;\n        }\n        let newItem = new LinkedListItem(val);\n        let currentItem = this._head;\n        if (!currentItem) {\n            return false;\n        }\n        else {\n            while (true) {\n                if (currentItem.value === previousItem) {\n                    newItem.next = currentItem.next;\n                    newItem.prev = currentItem;\n                    currentItem.next = newItem;\n                    if (newItem.next) {\n                        newItem.next.prev = newItem;\n                    }\n                    else {\n                        this._tail = newItem;\n                    }\n                    this._length++;\n                    return true;\n                }\n                else {\n                    if (currentItem.next) {\n                        currentItem = currentItem.next;\n                    }\n                    else {\n                        // can't locate previousItem\n                        return false;\n                    }\n                }\n            }\n        }\n    }\n    // Adds the element at the end of the linked list\n    append(val, checkDuplicates = false) {\n        if (checkDuplicates && this.isDuplicate(val)) {\n            return false;\n        }\n        let newItem = new LinkedListItem(val);\n        if (!this._tail) {\n            this._head = this._tail = newItem;\n        }\n        else {\n            this._tail.next = newItem;\n            newItem.prev = this._tail;\n            this._tail = newItem;\n        }\n        this._length++;\n        return true;\n    }\n    // Add the element at the beginning of the linked list\n    prepend(val, checkDuplicates = false) {\n        if (checkDuplicates && this.isDuplicate(val)) {\n            return false;\n        }\n        let newItem = new LinkedListItem(val);\n        if (!this._head) {\n            this._head = this._tail = newItem;\n        }\n        else {\n            newItem.next = this._head;\n            this._head.prev = newItem;\n            this._head = newItem;\n        }\n        this._length++;\n        return true;\n    }\n    remove(val) {\n        let currentItem = this._head;\n        if (!currentItem) {\n            return;\n        }\n        if (currentItem.value === val) {\n            this._head = currentItem.next;\n            this._head.prev = null;\n            currentItem.next = currentItem.prev = null;\n            this._length--;\n            return currentItem.value;\n        }\n        else {\n            while (true) {\n                if (currentItem.value === val) {\n                    if (currentItem.next) { // special case for last element\n                        currentItem.prev.next = currentItem.next;\n                        currentItem.next.prev = currentItem.prev;\n                        currentItem.next = currentItem.prev = null;\n                    }\n                    else {\n                        currentItem.prev.next = null;\n                        this._tail = currentItem.prev;\n                        currentItem.next = currentItem.prev = null;\n                    }\n                    this._length--;\n                    return currentItem.value;\n                }\n                else {\n                    if (currentItem.next) {\n                        currentItem = currentItem.next;\n                    }\n                    else {\n                        return;\n                    }\n                }\n            }\n        }\n    }\n    removeHead() {\n        let currentItem = this._head;\n        // empty list\n        if (!currentItem) {\n            return;\n        }\n        // single item list\n        if (!this._head.next) {\n            this._head = null;\n            this._tail = null;\n            // full list\n        }\n        else {\n            this._head.next.prev = null;\n            this._head = this._head.next;\n            currentItem.next = currentItem.prev = null;\n        }\n        this._length--;\n        return currentItem.value;\n    }\n    removeTail() {\n        let currentItem = this._tail;\n        // empty list\n        if (!currentItem) {\n            return;\n        }\n        // single item list\n        if (!this._tail.prev) {\n            this._head = null;\n            this._tail = null;\n            // full list\n        }\n        else {\n            this._tail.prev.next = null;\n            this._tail = this._tail.prev;\n            currentItem.next = currentItem.prev = null;\n        }\n        this._length--;\n        return currentItem.value;\n    }\n    first(num) {\n        let iter = this.iterator();\n        let result = [];\n        let n = Math.min(num, this.length);\n        for (let i = 0; i < n; i++) {\n            let val = iter.next();\n            result.push(val.value);\n        }\n        return result;\n    }\n    toArray() {\n        return [...this];\n    }\n    isDuplicate(val) {\n        let set = new Set(this.toArray());\n        return set.has(val);\n    }\n}\nexports.LinkedList = LinkedList;\nclass LinkedListItem {\n    constructor(val) {\n        this.value = val;\n        this.next = null;\n        this.prev = null;\n    }\n}\nexports.LinkedListItem = LinkedListItem;\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoieGJMNy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9saW5rZWQtbGlzdC10eXBlc2NyaXB0L2xpYi9zcmMvaW5kZXguanM/YzViMiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNsYXNzIExpbmtlZExpc3Qge1xuICAgIGNvbnN0cnVjdG9yKC4uLnZhbHVlcykge1xuICAgICAgICB0aGlzLl9oZWFkID0gdGhpcy5fdGFpbCA9IG51bGw7XG4gICAgICAgIHRoaXMuX2xlbmd0aCA9IDA7XG4gICAgICAgIGlmICh2YWx1ZXMubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgdmFsdWVzLmZvckVhY2goKHZhbHVlKSA9PiB7XG4gICAgICAgICAgICAgICAgdGhpcy5hcHBlbmQodmFsdWUpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgKml0ZXJhdG9yKCkge1xuICAgICAgICBsZXQgY3VycmVudEl0ZW0gPSB0aGlzLl9oZWFkO1xuICAgICAgICB3aGlsZSAoY3VycmVudEl0ZW0pIHtcbiAgICAgICAgICAgIHlpZWxkIGN1cnJlbnRJdGVtLnZhbHVlO1xuICAgICAgICAgICAgY3VycmVudEl0ZW0gPSBjdXJyZW50SXRlbS5uZXh0O1xuICAgICAgICB9XG4gICAgfVxuICAgIFtTeW1ib2wuaXRlcmF0b3JdKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5pdGVyYXRvcigpO1xuICAgIH1cbiAgICBnZXQgaGVhZCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2hlYWQgPyB0aGlzLl9oZWFkLnZhbHVlIDogbnVsbDtcbiAgICB9XG4gICAgZ2V0IHRhaWwoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl90YWlsID8gdGhpcy5fdGFpbC52YWx1ZSA6IG51bGw7XG4gICAgfVxuICAgIGdldCBsZW5ndGgoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9sZW5ndGg7XG4gICAgfVxuICAgIC8vIEFkZHMgdGhlIGVsZW1lbnQgYXQgYSBzcGVjaWZpYyBwb3NpdGlvbiBpbnNpZGUgdGhlIGxpbmtlZCBsaXN0XG4gICAgaW5zZXJ0KHZhbCwgcHJldmlvdXNJdGVtLCBjaGVja0R1cGxpY2F0ZXMgPSBmYWxzZSkge1xuICAgICAgICBpZiAoY2hlY2tEdXBsaWNhdGVzICYmIHRoaXMuaXNEdXBsaWNhdGUodmFsKSkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIGxldCBuZXdJdGVtID0gbmV3IExpbmtlZExpc3RJdGVtKHZhbCk7XG4gICAgICAgIGxldCBjdXJyZW50SXRlbSA9IHRoaXMuX2hlYWQ7XG4gICAgICAgIGlmICghY3VycmVudEl0ZW0pIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHdoaWxlICh0cnVlKSB7XG4gICAgICAgICAgICAgICAgaWYgKGN1cnJlbnRJdGVtLnZhbHVlID09PSBwcmV2aW91c0l0ZW0pIHtcbiAgICAgICAgICAgICAgICAgICAgbmV3SXRlbS5uZXh0ID0gY3VycmVudEl0ZW0ubmV4dDtcbiAgICAgICAgICAgICAgICAgICAgbmV3SXRlbS5wcmV2ID0gY3VycmVudEl0ZW07XG4gICAgICAgICAgICAgICAgICAgIGN1cnJlbnRJdGVtLm5leHQgPSBuZXdJdGVtO1xuICAgICAgICAgICAgICAgICAgICBpZiAobmV3SXRlbS5uZXh0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBuZXdJdGVtLm5leHQucHJldiA9IG5ld0l0ZW07XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLl90YWlsID0gbmV3SXRlbTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB0aGlzLl9sZW5ndGgrKztcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBpZiAoY3VycmVudEl0ZW0ubmV4dCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgY3VycmVudEl0ZW0gPSBjdXJyZW50SXRlbS5uZXh0O1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gY2FuJ3QgbG9jYXRlIHByZXZpb3VzSXRlbVxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIC8vIEFkZHMgdGhlIGVsZW1lbnQgYXQgdGhlIGVuZCBvZiB0aGUgbGlua2VkIGxpc3RcbiAgICBhcHBlbmQodmFsLCBjaGVja0R1cGxpY2F0ZXMgPSBmYWxzZSkge1xuICAgICAgICBpZiAoY2hlY2tEdXBsaWNhdGVzICYmIHRoaXMuaXNEdXBsaWNhdGUodmFsKSkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIGxldCBuZXdJdGVtID0gbmV3IExpbmtlZExpc3RJdGVtKHZhbCk7XG4gICAgICAgIGlmICghdGhpcy5fdGFpbCkge1xuICAgICAgICAgICAgdGhpcy5faGVhZCA9IHRoaXMuX3RhaWwgPSBuZXdJdGVtO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5fdGFpbC5uZXh0ID0gbmV3SXRlbTtcbiAgICAgICAgICAgIG5ld0l0ZW0ucHJldiA9IHRoaXMuX3RhaWw7XG4gICAgICAgICAgICB0aGlzLl90YWlsID0gbmV3SXRlbTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLl9sZW5ndGgrKztcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIC8vIEFkZCB0aGUgZWxlbWVudCBhdCB0aGUgYmVnaW5uaW5nIG9mIHRoZSBsaW5rZWQgbGlzdFxuICAgIHByZXBlbmQodmFsLCBjaGVja0R1cGxpY2F0ZXMgPSBmYWxzZSkge1xuICAgICAgICBpZiAoY2hlY2tEdXBsaWNhdGVzICYmIHRoaXMuaXNEdXBsaWNhdGUodmFsKSkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIGxldCBuZXdJdGVtID0gbmV3IExpbmtlZExpc3RJdGVtKHZhbCk7XG4gICAgICAgIGlmICghdGhpcy5faGVhZCkge1xuICAgICAgICAgICAgdGhpcy5faGVhZCA9IHRoaXMuX3RhaWwgPSBuZXdJdGVtO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgbmV3SXRlbS5uZXh0ID0gdGhpcy5faGVhZDtcbiAgICAgICAgICAgIHRoaXMuX2hlYWQucHJldiA9IG5ld0l0ZW07XG4gICAgICAgICAgICB0aGlzLl9oZWFkID0gbmV3SXRlbTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLl9sZW5ndGgrKztcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIHJlbW92ZSh2YWwpIHtcbiAgICAgICAgbGV0IGN1cnJlbnRJdGVtID0gdGhpcy5faGVhZDtcbiAgICAgICAgaWYgKCFjdXJyZW50SXRlbSkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGlmIChjdXJyZW50SXRlbS52YWx1ZSA9PT0gdmFsKSB7XG4gICAgICAgICAgICB0aGlzLl9oZWFkID0gY3VycmVudEl0ZW0ubmV4dDtcbiAgICAgICAgICAgIHRoaXMuX2hlYWQucHJldiA9IG51bGw7XG4gICAgICAgICAgICBjdXJyZW50SXRlbS5uZXh0ID0gY3VycmVudEl0ZW0ucHJldiA9IG51bGw7XG4gICAgICAgICAgICB0aGlzLl9sZW5ndGgtLTtcbiAgICAgICAgICAgIHJldHVybiBjdXJyZW50SXRlbS52YWx1ZTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHdoaWxlICh0cnVlKSB7XG4gICAgICAgICAgICAgICAgaWYgKGN1cnJlbnRJdGVtLnZhbHVlID09PSB2YWwpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGN1cnJlbnRJdGVtLm5leHQpIHsgLy8gc3BlY2lhbCBjYXNlIGZvciBsYXN0IGVsZW1lbnRcbiAgICAgICAgICAgICAgICAgICAgICAgIGN1cnJlbnRJdGVtLnByZXYubmV4dCA9IGN1cnJlbnRJdGVtLm5leHQ7XG4gICAgICAgICAgICAgICAgICAgICAgICBjdXJyZW50SXRlbS5uZXh0LnByZXYgPSBjdXJyZW50SXRlbS5wcmV2O1xuICAgICAgICAgICAgICAgICAgICAgICAgY3VycmVudEl0ZW0ubmV4dCA9IGN1cnJlbnRJdGVtLnByZXYgPSBudWxsO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgY3VycmVudEl0ZW0ucHJldi5uZXh0ID0gbnVsbDtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuX3RhaWwgPSBjdXJyZW50SXRlbS5wcmV2O1xuICAgICAgICAgICAgICAgICAgICAgICAgY3VycmVudEl0ZW0ubmV4dCA9IGN1cnJlbnRJdGVtLnByZXYgPSBudWxsO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX2xlbmd0aC0tO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gY3VycmVudEl0ZW0udmFsdWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBpZiAoY3VycmVudEl0ZW0ubmV4dCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgY3VycmVudEl0ZW0gPSBjdXJyZW50SXRlbS5uZXh0O1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIHJlbW92ZUhlYWQoKSB7XG4gICAgICAgIGxldCBjdXJyZW50SXRlbSA9IHRoaXMuX2hlYWQ7XG4gICAgICAgIC8vIGVtcHR5IGxpc3RcbiAgICAgICAgaWYgKCFjdXJyZW50SXRlbSkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIC8vIHNpbmdsZSBpdGVtIGxpc3RcbiAgICAgICAgaWYgKCF0aGlzLl9oZWFkLm5leHQpIHtcbiAgICAgICAgICAgIHRoaXMuX2hlYWQgPSBudWxsO1xuICAgICAgICAgICAgdGhpcy5fdGFpbCA9IG51bGw7XG4gICAgICAgICAgICAvLyBmdWxsIGxpc3RcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuX2hlYWQubmV4dC5wcmV2ID0gbnVsbDtcbiAgICAgICAgICAgIHRoaXMuX2hlYWQgPSB0aGlzLl9oZWFkLm5leHQ7XG4gICAgICAgICAgICBjdXJyZW50SXRlbS5uZXh0ID0gY3VycmVudEl0ZW0ucHJldiA9IG51bGw7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5fbGVuZ3RoLS07XG4gICAgICAgIHJldHVybiBjdXJyZW50SXRlbS52YWx1ZTtcbiAgICB9XG4gICAgcmVtb3ZlVGFpbCgpIHtcbiAgICAgICAgbGV0IGN1cnJlbnRJdGVtID0gdGhpcy5fdGFpbDtcbiAgICAgICAgLy8gZW1wdHkgbGlzdFxuICAgICAgICBpZiAoIWN1cnJlbnRJdGVtKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgLy8gc2luZ2xlIGl0ZW0gbGlzdFxuICAgICAgICBpZiAoIXRoaXMuX3RhaWwucHJldikge1xuICAgICAgICAgICAgdGhpcy5faGVhZCA9IG51bGw7XG4gICAgICAgICAgICB0aGlzLl90YWlsID0gbnVsbDtcbiAgICAgICAgICAgIC8vIGZ1bGwgbGlzdFxuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5fdGFpbC5wcmV2Lm5leHQgPSBudWxsO1xuICAgICAgICAgICAgdGhpcy5fdGFpbCA9IHRoaXMuX3RhaWwucHJldjtcbiAgICAgICAgICAgIGN1cnJlbnRJdGVtLm5leHQgPSBjdXJyZW50SXRlbS5wcmV2ID0gbnVsbDtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLl9sZW5ndGgtLTtcbiAgICAgICAgcmV0dXJuIGN1cnJlbnRJdGVtLnZhbHVlO1xuICAgIH1cbiAgICBmaXJzdChudW0pIHtcbiAgICAgICAgbGV0IGl0ZXIgPSB0aGlzLml0ZXJhdG9yKCk7XG4gICAgICAgIGxldCByZXN1bHQgPSBbXTtcbiAgICAgICAgbGV0IG4gPSBNYXRoLm1pbihudW0sIHRoaXMubGVuZ3RoKTtcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBuOyBpKyspIHtcbiAgICAgICAgICAgIGxldCB2YWwgPSBpdGVyLm5leHQoKTtcbiAgICAgICAgICAgIHJlc3VsdC5wdXNoKHZhbC52YWx1ZSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG4gICAgdG9BcnJheSgpIHtcbiAgICAgICAgcmV0dXJuIFsuLi50aGlzXTtcbiAgICB9XG4gICAgaXNEdXBsaWNhdGUodmFsKSB7XG4gICAgICAgIGxldCBzZXQgPSBuZXcgU2V0KHRoaXMudG9BcnJheSgpKTtcbiAgICAgICAgcmV0dXJuIHNldC5oYXModmFsKTtcbiAgICB9XG59XG5leHBvcnRzLkxpbmtlZExpc3QgPSBMaW5rZWRMaXN0O1xuY2xhc3MgTGlua2VkTGlzdEl0ZW0ge1xuICAgIGNvbnN0cnVjdG9yKHZhbCkge1xuICAgICAgICB0aGlzLnZhbHVlID0gdmFsO1xuICAgICAgICB0aGlzLm5leHQgPSBudWxsO1xuICAgICAgICB0aGlzLnByZXYgPSBudWxsO1xuICAgIH1cbn1cbmV4cG9ydHMuTGlua2VkTGlzdEl0ZW0gPSBMaW5rZWRMaXN0SXRlbTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///xbL7\n");

/***/ })

}]);